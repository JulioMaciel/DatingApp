
vs code extensions:

c#
c# extensions
nuget pm
Angular Snippets
Angular Files
Angular Language Service
angular2-switcher
Auto rename tag
Bracket pair colorizer
Debugger for Chrome
material icon theme
path intellisense
prettier
TSLint

---------------------

dotnet new webapi -o DatingApp.API -n DatingApp.API
dotnet run

cd DatingApp.API
dotnet watch run

services.AddDbContext<DataContext>(x => x.UseSqlite(""));
ctrl + shift + p: search for Microsoft.EntityFramework.SqLite

dotnet ef migrations add InitialCreate
dotnet ef database update

npm install -g @angular/cli@6.0.8
ng new DatingApp-SPA

cd DatingApp-SPA
ng serve

app -> generate component

ctrl shift p -> icon theme (activate)

alt O; alt U

npm install bootstrap font-awesome

git init
create manually on Git
then, copy the remote command informed, such as git remote add origin https://github.com/JulioMaciel/DatingApp.git

angular snippes -> a-ng + tab

error 500 is always from API

NGX Bootstrap is a bootstrap that doesn't use JS
npm install ngx-bootstrap@3.0.1 --save

cd DatingApp-SPA
npm install alertifyjs --save

npm install @auth0/angular-jwt@2.0.0

bootswatch adiciona diferente templates colors in bootstrap templates
npm install bootswatch@4.1.1

routes handles what should do when user types something on url

generate guard by angular/cli:
cd src/app/_guards/
ng g guard auth --spec=false

migrations remove, just works if the DBN was not updated yet
dotnet ef migrations remove
however, if it was updated
{
drop the database
dotnet ef database drop
than, remove last migration
dotnet ef migrations remove
and update to recreate the database
dotnet ef database update
}

https://www.json-generator.com/

AutoMapper helps connect models of same object
Ctrl + shift + P
">" + nugget
then look for:
AutoMapper.Extensions.Microsoft.DependencyInjection
@4.0.1

when errors, try to find the problem on Network tab
also, it could be found mixed in middle of wall of text on the terminal

npm install ngx-gallery@5.3.2 --save

nugget: CloudinaryDotNet@1.3.1
Restore

to debug (under extations icon):
.Net Core attach (non web)
Run
Select dotnet #### DatingApp.API.dll (deve ser o ÚLTIMO da lista)

npm install ng2-file-upload@1.3.0 --save

if DB fucked up:
remove .db file
remove migrations folder
"init new" fixing migration
update db

time ago library:
npm install time-ago-pipe --save

Publishing:
angular.json -> "outputPath": "../DatingApp.API/wwwroot",
terminal SPA: ng build
app.UseDefaultFiles();
app.UseStaticFiles();

para fazer o F5 funcionar, precisa passar os routes válidos pro API
FallBack : Controller

at environment.prod.ts, add:
apiUrl: 'http://localhost:5000/api/'

terminal SPA: ng build --prod

then terminal API: dotnet build
and test on: http://localhost:5000/

if something was wrong, can use the command which will not reduce files
terminal SPA: ng build --prod-optiomizer=false

SQLite -> MySQL
https://dev.mysql.com/downloads/windows/installer/8.0.html
Windows (x86, 32-bit), MSI Installer	8.0.17	18.5M	
Type: Server only
Group Replication: Stand alone [default]
Type and Networking: [default]
Authentication Method: Strong [default]
passwords, Add User: appuser + passwords [default*]
Windows Service: [default] (maybe uncheck to start at win startup)
Execute
Then,
copy path: C:\Program Files\MySQL\MySQL Server 8.0\bin
This PC -> Properties -> Advanced System Settings -> Advanced tab -> Environment Variables... ->
Select Path -> Edit... -> New -> paste from clipboard -> ok, ok, ok!
cmd:
mysql -u appuser -p 
insert password
show databases; -> to check if it's everything ok

google: ef/core/providers/ -> lista de DBs compatibilidade
MySQL: Pomelo.EntityFrameworkCore.MySql
add via nugget ctrl shipt p Pomelo.EntityFrameworkCore.MySql
dotnet restore

DevelopmentMode of:
Startup.cs, appsettings.json

https://docs.microsoft.com/en-us/aspnet/core/fundamentals/environments?view=aspnetcore-2.2#set-the-environment
terminal:
$Env:ASPNETCORE_ENVIRONMENT = "Production"
remove migration folder
dotnet ef migrations add mysqlInitial
dotnet ef database update
launchSettings.json -> ASPNETCORE_ENVIRONMENT": "Production"
dotnet run

